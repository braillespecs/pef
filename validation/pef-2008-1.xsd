<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.daisy.org/ns/2008/pef" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:pef="http://www.daisy.org/ns/2008/pef">
  <xs:import namespace="http://purl.org/dc/elements/1.1/" schemaLocation="dc.xsd"/>
  <xs:element name="pef">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="pef:head"/>
        <xs:element ref="pef:body"/>
      </xs:sequence>
      <xs:attributeGroup ref="pef:element.pef.attList"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="element.pef.attList">
    <xs:attribute name="version" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="2008-1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="head" type="pef:element.meta"/>
  <xs:complexType name="element.meta">
    <xs:sequence>
      <xs:element ref="pef:meta"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="meta">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="dc:identifier"/>
        <xs:element ref="dc:format"/>
        <xs:element ref="dc:title"/>
        <xs:element ref="dc:creator"/>
        <xs:element ref="dc:subject"/>
        <xs:element ref="dc:description"/>
        <xs:element ref="dc:publisher"/>
        <xs:element ref="dc:contributor"/>
        <xs:element ref="dc:date"/>
        <xs:element ref="dc:type"/>
        <xs:element ref="dc:source"/>
        <xs:element ref="dc:language"/>
        <xs:element ref="dc:relation"/>
        <xs:element ref="dc:coverage"/>
        <xs:element ref="dc:rights"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="body">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="pef:volume"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="volume">
    <xs:annotation>
      <xs:documentation>Defines a volume of embossed braille.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="pef:section"/>
      </xs:sequence>
      <xs:attributeGroup ref="pef:attribute.cols"/>
      <xs:attributeGroup ref="pef:attribute.rows"/>
      <xs:attributeGroup ref="pef:attribute.rowgap"/>
      <xs:attributeGroup ref="pef:attribute.duplex"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="section">
    <xs:annotation>
      <xs:documentation>Defines a section of embossed braille.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="pef:page"/>
      </xs:sequence>
      <xs:attributeGroup ref="pef:attribute.cols.optional"/>
      <xs:attributeGroup ref="pef:attribute.rows.optional"/>
      <xs:attributeGroup ref="pef:attribute.rowgap.optional"/>
      <xs:attributeGroup ref="pef:attribute.duplex.optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="page">
    <xs:annotation>
      <xs:documentation>Defines a page of embossed braille.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="pef:row"/>
      </xs:sequence>
      <xs:attributeGroup ref="pef:attribute.rowgap.optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="row">
    <xs:annotation>
      <xs:documentation>Defines a row of embossed braille.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="pef:datatype.string.unicode.braille">
          <xs:attributeGroup ref="pef:attribute.rowgap.optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attribute.cols">
    <xs:annotation>
      <xs:documentation>Defines the width (measured in characters) of page descendants.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cols" use="required" type="pef:datatype.positiveInteger"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.cols.optional">
    <xs:annotation>
      <xs:documentation>Overrides any value defined by ancestors.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cols" type="pef:datatype.positiveInteger"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.rows">
    <xs:annotation>
      <xs:documentation>Defines the height (measured in characters) of page descendants.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="rows" use="required" type="pef:datatype.positiveInteger"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.rows.optional">
    <xs:annotation>
      <xs:documentation>Overrides any value defined by ancestors.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="rows" type="pef:datatype.positiveInteger"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.rowgap">
    <xs:annotation>
      <xs:documentation>Defines the size of a gap between rows (expressed as a multiple of the dot-to-dot height). In practice, this value should be 0 or more for six dot braille and 1 or more for eight dot braille</xs:documentation>
    </xs:annotation>
    <xs:attribute name="rowgap" use="required" type="pef:datatype.nonNegativeInteger"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.rowgap.optional">
    <xs:annotation>
      <xs:documentation>Overrides any value defined by ancestors.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="rowgap" type="pef:datatype.nonNegativeInteger"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.duplex">
    <xs:annotation>
      <xs:documentation>Defines whether page descendants are intended for duplex printing or not.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="duplex" use="required" type="pef:datatype.boolean"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="attribute.duplex.optional">
    <xs:annotation>
      <xs:documentation>Overrides any value defined by ancestors.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="duplex" type="pef:datatype.boolean"/>
  </xs:attributeGroup>
  <!--
    
    <define name="attribute.page.offset">
    	<attribute name="first-page-number">
    		<ref name="datatype.positiveInteger"/>
    	</attribute>
    </define>
    <define name="attribute.page.offset.optional">
    	<optional>
    		<ref name="attribute.page.offset"/>
    	</optional>	
    </define>
  -->
  <!--
    
    <define name="attribute.page.style">
    	<attribute name="page-number-style">
    		<ref name="datatype.page.style"/>
    	</attribute>
    </define>
    <define name="attribute.page.style.optional">
    	<optional>
    		<ref name="attribute.page.style"/>
    	</optional>	
    </define>
  -->
  <!-- data types -->
  <!--
    
    <define name="datatype.page.style">
    	<choice>
    		<value>arabic</value>
    		<value>roman</value>
    		<value>other</value>
    	</choice>
    </define>
  -->
  <xs:simpleType name="datatype.mime.pef">
    <xs:restriction base="xs:token">
      <xs:enumeration value="application/x-pef+xml"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="datatype.string.unicode.braille">
    <xs:restriction base="xs:string">
      <xs:pattern value="([⠀-⣿])*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="datatype.rfc1766">
    <xs:restriction base="xs:language"/>
  </xs:simpleType>
  <xs:simpleType name="datatype.string">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType name="datatype.boolean">
    <xs:restriction base="xs:boolean"/>
  </xs:simpleType>
  <xs:simpleType name="datatype.integer">
    <xs:restriction base="xs:integer"/>
  </xs:simpleType>
  <xs:simpleType name="datatype.iso8601.yyyyMmDd">
    <xs:annotation>
      <xs:documentation>[ISO8601] subset: requires yyyy-mm-dd
			format</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{4}-[0-9]{2}-[0-9]{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="datatype.nonNegativeInteger">
    <xs:restriction base="xs:nonNegativeInteger"/>
  </xs:simpleType>
  <xs:simpleType name="datatype.positiveInteger">
    <xs:restriction base="xs:positiveInteger"/>
  </xs:simpleType>
</xs:schema>
